[{"E:\\jspReact\\Youtubeproject - Copy\\youtube\\src\\index.js":"1","E:\\jspReact\\Youtubeproject - Copy\\youtube\\src\\App.js":"2","E:\\jspReact\\Youtubeproject - Copy\\youtube\\src\\Api\\YoutubeApi.js":"3","E:\\jspReact\\Youtubeproject - Copy\\youtube\\src\\Components\\VideosComponent\\VideoList.jsx":"4","E:\\jspReact\\Youtubeproject - Copy\\youtube\\src\\Components\\HeaderComponent\\Header.jsx":"5","E:\\jspReact\\Youtubeproject - Copy\\youtube\\src\\Components\\VideosComponent\\VideoDetails.jsx":"6","E:\\jspReact\\Youtubeproject - Copy\\youtube\\src\\Components\\VideosComponent\\VideoItem.jsx":"7","E:\\jspReact\\Youtubeproject - Copy\\youtube\\src\\Components\\SearchComponent\\Search.jsx":"8","E:\\jspReact\\Youtubeproject - Copy\\youtube\\src\\Components\\StatisticsComponents\\Statistics.jsx":"9"},{"size":287,"mtime":1606931894673,"results":"10","hashOfConfig":"11"},{"size":2138,"mtime":1607187952791,"results":"12","hashOfConfig":"11"},{"size":476,"mtime":1607187438781,"results":"13","hashOfConfig":"11"},{"size":475,"mtime":1595428694458,"results":"14","hashOfConfig":"11"},{"size":1465,"mtime":1595333708177,"results":"15","hashOfConfig":"11"},{"size":1256,"mtime":1595428653029,"results":"16","hashOfConfig":"11"},{"size":948,"mtime":1595428686937,"results":"17","hashOfConfig":"11"},{"size":1108,"mtime":1595428610587,"results":"18","hashOfConfig":"11"},{"size":2276,"mtime":1595428632655,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1v43y5t",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"E:\\jspReact\\Youtubeproject - Copy\\youtube\\src\\index.js",[],["42","43"],"E:\\jspReact\\Youtubeproject - Copy\\youtube\\src\\App.js",[],"E:\\jspReact\\Youtubeproject - Copy\\youtube\\src\\Api\\YoutubeApi.js",[],"E:\\jspReact\\Youtubeproject - Copy\\youtube\\src\\Components\\VideosComponent\\VideoList.jsx",[],"E:\\jspReact\\Youtubeproject - Copy\\youtube\\src\\Components\\HeaderComponent\\Header.jsx",["44"],"import React, { Component, Fragment } from \"react\";\r\nimport SearchComponent from \"../SearchComponent/Search\";\r\nimport \"../../youtube.css\";\r\nimport \"./Header.styles.css\";\r\nclass HeaderComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <section id=\"header\">\r\n          <article>\r\n            <div className=\"logoBlock\">\r\n              <i className=\"bars icon im\"></i>\r\n              <img src=\"/1280px-YouTube_Logo.svg.png\" alt=\"logo\" />\r\n            </div>\r\n            <div className=\"searchBlock\">\r\n              <SearchComponent HeaderFormProps={this.props.fromAppFormProps} />\r\n            </div>\r\n            <div className=\"menuBlock\">\r\n              <section className=\"video_and_menuicons\">\r\n                <div>\r\n                  <i className=\"video icon icn\"></i>\r\n                </div>\r\n                <div>\r\n                  <i className=\"th icon icn\"></i>\r\n                </div>\r\n                <div>\r\n                  <i className=\"ellipsis vertical icon icn\"></i>\r\n                </div>\r\n                <div className=\"loginBlock\">\r\n                  <a href=\"\">\r\n                    <i className=\"user circle icon icn\"></i>SignIn\r\n                  </a>\r\n                </div>\r\n              </section>\r\n            </div>\r\n          </article>\r\n        </section>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderComponent;\r\n","E:\\jspReact\\Youtubeproject - Copy\\youtube\\src\\Components\\VideosComponent\\VideoDetails.jsx",["45"],"import React, { Fragment } from \"react\";\r\nimport Statistics from \"../StatisticsComponents/Statistics\";\r\nimport Moment from \"react-moment\";\r\nimport \"moment-timezone\";\r\nfunction VideoDetails({ video, statistics }) {\r\n  if (!video) {\r\n    return \"loading...\";\r\n  }\r\n  let videoUrl = ` https://www.youtube.com/embed/${video.id.videoId}`;\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <iframe\r\n          width=\"100%\"\r\n          height=\"500px\"\r\n          src={videoUrl}\r\n          frameborder=\"0\"\r\n          allow=\"accelerometer; autoplay;\r\n        encrypted-media; gyroscope; picture-in-picture\"\r\n          allowfullscreen=\"true\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"videoTitleBlock\">\r\n        <h1>{video.snippet.title}</h1>\r\n        <div className=\"date_count_likeBlock\">\r\n          <div className=\"statistics\">\r\n            <Statistics statistics={statistics} video={video} />\r\n          </div>\r\n          <div className=\"date\">\r\n            <Moment format=\"D MMM YYYY\" withTitle>\r\n              {video.snippet.publishedAt}\r\n            </Moment>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <p>{video.snippet.channelTitle}</p>\r\n      <p>{video.snippet.description}</p>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default VideoDetails;\r\n","E:\\jspReact\\Youtubeproject - Copy\\youtube\\src\\Components\\VideosComponent\\VideoItem.jsx",[],"E:\\jspReact\\Youtubeproject - Copy\\youtube\\src\\Components\\SearchComponent\\Search.jsx",[],["46","47"],"E:\\jspReact\\Youtubeproject - Copy\\youtube\\src\\Components\\StatisticsComponents\\Statistics.jsx",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":34,"column":19,"nodeType":"54","endLine":34,"endColumn":30},{"ruleId":"55","severity":1,"message":"56","line":13,"column":9,"nodeType":"54","endLine":21,"endColumn":11},{"ruleId":"48","replacedBy":"57"},{"ruleId":"50","replacedBy":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.",["59"],["60"],"no-global-assign","no-unsafe-negation"]